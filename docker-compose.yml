services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-court-backend
    env_file: ./backend/.env
    ports:
      - "3000:3000"
    volumes:
      - ./cases:/app/cases
      - ./backend/data:/app/data
      - ./backend/cache:/app/cache
      - ./backend/coinbase_cloud_api_key.json:/app/coinbase_cloud_api_key.json:ro
      - ./backend/deployment-info.json:/app/deployment-info.json:ro
      - ./backend/wallets:/app/wallets
      - ./backend/data/settlements:/app/data/settlements
    environment:
      - NODE_ENV=production
      - PORT=3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ai-court-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-court-frontend
    env_file: ./frontend/.env.local
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ai-court-network

networks:
  ai-court-network:
    driver: bridge
    name: ai-court-network

volumes:
  cases-data:
    driver: local
  backend-data:
    driver: local
  backend-cache:
    driver: local 