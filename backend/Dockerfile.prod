# Production Dockerfile for Railway
FROM node:20-alpine AS builder

# Install build dependencies
RUN apk add --no-cache python3 make g++ git

WORKDIR /app

# Copy package files
COPY package*.json ./
RUN npm ci 

# Copy ALL source code and artifacts
COPY . .

# Build contracts (generate artifacts)
RUN npx hardhat compile

# Create production stage
FROM node:20-alpine AS production

# Install runtime dependencies
RUN apk add --no-cache curl

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

WORKDIR /app

# Copy everything from builder
COPY --from=builder --chown=nodejs:nodejs /app ./

# Create coinbase_cloud_api_key.json from environment variables (BEFORE switching to non-root user)
RUN if [ -n "$COINBASE_PRIVATE_KEY" ] && [ -n "$COINBASE_PROJECT_ID" ]; then \
      echo "üîß Creating coinbase_cloud_api_key.json from environment variables..."; \
      echo "{ \"name\": \"${COINBASE_NAME:-ai-lawsuit-bot}\", \"privateKey\": \"$COINBASE_PRIVATE_KEY\", \"id\": \"$COINBASE_PROJECT_ID\" }" > coinbase_cloud_api_key.json; \
      echo "‚úÖ Created coinbase_cloud_api_key.json"; \
      ls -la coinbase_cloud_api_key.json; \
      chown nodejs:nodejs coinbase_cloud_api_key.json; \
    else \
      echo "‚ùå Missing COINBASE_PRIVATE_KEY or COINBASE_PROJECT_ID environment variables"; \
      echo "‚ö†Ô∏è  App will run without wallet functionality"; \
    fi

# Create necessary directories
RUN mkdir -p /app/cases /app/data /app/cache /app/wallets /app/data/settlements && \
    chown -R nodejs:nodejs /app/cases /app/data /app/cache /app/wallets /app/data/settlements

# Switch to non-root user
USER nodejs

EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

CMD ["npm", "start"]